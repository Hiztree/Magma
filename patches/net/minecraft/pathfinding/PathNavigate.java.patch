--- ../src-base/minecraft/net/minecraft/pathfinding/PathNavigate.java
+++ ../src-work/minecraft/net/minecraft/pathfinding/PathNavigate.java
@@ -1,6 +1,9 @@
 package net.minecraft.pathfinding;
 
 import javax.annotation.Nullable;
+
+import com.destroystokyo.paper.MCUtil;
+import com.destroystokyo.paper.event.entity.EntityPathfindEvent;
 import net.minecraft.block.Block;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.Entity;
@@ -8,6 +11,7 @@
 import net.minecraft.entity.SharedMonsterAttributes;
 import net.minecraft.entity.ai.attributes.IAttributeInstance;
 import net.minecraft.init.Blocks;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.math.AxisAlignedBB;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.MathHelper;
@@ -18,6 +22,13 @@
 public abstract class PathNavigate
 {
     protected EntityLiving entity;
+
+    // Paper start
+    public EntityLiving getEntity() {
+        return entity;
+    }
+    // Paper end
+
     protected World world;
     @Nullable
     protected Path currentPath;
@@ -99,6 +110,7 @@
         }
         else
         {
+            if(!new EntityPathfindEvent(getEntity().getBukkitEntity(), MCUtil.toLocation(getEntity().world, pos), null).callEvent()) { return null; } // Paper
             this.targetPos = pos;
             float f = this.getPathSearchRange();
             this.world.profiler.startSection("pathfind");
@@ -128,6 +140,7 @@
             }
             else
             {
+                if(!new EntityPathfindEvent(getEntity().getBukkitEntity(), MCUtil.toLocation(getEntity().world, blockpos), null).callEvent()) { return null; } // Paper
                 this.targetPos = blockpos;
                 float f = this.getPathSearchRange();
                 this.world.profiler.startSection("pathfind");
@@ -148,9 +161,24 @@
 
     public boolean tryMoveToEntityLiving(Entity entityIn, double speedIn)
     {
+        // Paper start - Pathfinding optimizations
+        if (this.pathfindFailures > 10 && this.currentPath == null && MinecraftServer.currentTick < this.lastFailure + 40) {
+            return false;
+        }
         Path path = this.getPathToEntityLiving(entityIn);
-        return path != null && this.setPath(path, speedIn);
+        if (entityIn != null && this.setPath(path, speedIn)) {
+            this.lastFailure = 0;
+            this.pathfindFailures = 0;
+            return true;
+        } else {
+            this.pathfindFailures++;
+            this.lastFailure = MinecraftServer.currentTick;
+            return false;
+        }
     }
+    private int lastFailure = 0;
+    private int pathfindFailures = 0;
+    // Paper end
 
     public boolean setPath(@Nullable Path pathentityIn, double speedIn)
     {
@@ -317,6 +345,7 @@
 
     public void clearPath()
     {
+        this.pathfindFailures = 0; this.lastFailure = 0; // Paper - Pathfinding optimizations
         this.currentPath = null;
     }
 
